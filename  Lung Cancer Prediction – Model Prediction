{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3947767,"sourceType":"datasetVersion","datasetId":2206522}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:02:42.990623Z","iopub.execute_input":"2025-08-19T11:02:42.990972Z","iopub.status.idle":"2025-08-19T11:02:43.413117Z","shell.execute_reply.started":"2025-08-19T11:02:42.990935Z","shell.execute_reply":"2025-08-19T11:02:43.411969Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/lung-cancer/survey lung cancer.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# üî• LUNG CANCER PREDICTION \n# Author: Muhammad Junaid\n# Dataset: survey lung cancer.csv (Kaggle)\n# Goal: Predict Lung Cancer with >98% Accuracy using EDA, Feature Engineering & Ensemble Models","metadata":{}},{"cell_type":"markdown","source":"##  1. Install & Import Required Libraries","metadata":{}},{"cell_type":"code","source":"# Install if needed\n!pip install plotly pandas numpy seaborn scikit-learn imbalanced-learn xgboost lightgbm catboost shap\n\n# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# ML Libraries\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve, accuracy_score\nfrom imblearn.over_sampling import SMOTE\nimport xgboost as XGB\nimport lightgbm as lgb\nimport catboost as cb\n\n# SHAP for Interpretability\nimport shap\n\nprint(\"‚úÖ Libraries loaded successfully!\")","metadata":{"trusted":true,"execution":{"iopub.status.idle":"2025-08-19T11:03:31.851193Z","shell.execute_reply.started":"2025-08-19T11:03:03.782080Z","shell.execute_reply":"2025-08-19T11:03:31.850101Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Libraries loaded successfully!\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"##  2. Load the Dataset","metadata":{}},{"cell_type":"code","source":"# Load the CSV file\ndf = pd.read_csv('/kaggle/input/lung-cancer/survey lung cancer.csv')\n\n# Display first 5 rows\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:03:35.217196Z","iopub.execute_input":"2025-08-19T11:03:35.217547Z","iopub.status.idle":"2025-08-19T11:03:35.269433Z","shell.execute_reply.started":"2025-08-19T11:03:35.217519Z","shell.execute_reply":"2025-08-19T11:03:35.268489Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"  GENDER  AGE  SMOKING  YELLOW_FINGERS  ANXIETY  PEER_PRESSURE  \\\n0      M   69        1               2        2              1   \n1      M   74        2               1        1              1   \n2      F   59        1               1        1              2   \n3      M   63        2               2        2              1   \n4      F   63        1               2        1              1   \n\n   CHRONIC DISEASE  FATIGUE   ALLERGY   WHEEZING  ALCOHOL CONSUMING  COUGHING  \\\n0                1         2         1         2                  2         2   \n1                2         2         2         1                  1         1   \n2                1         2         1         2                  1         2   \n3                1         1         1         1                  2         1   \n4                1         1         1         2                  1         2   \n\n   SHORTNESS OF BREATH  SWALLOWING DIFFICULTY  CHEST PAIN LUNG_CANCER  \n0                    2                      2           2         YES  \n1                    2                      2           2         YES  \n2                    2                      1           2          NO  \n3                    1                      2           2          NO  \n4                    2                      1           1          NO  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>GENDER</th>\n      <th>AGE</th>\n      <th>SMOKING</th>\n      <th>YELLOW_FINGERS</th>\n      <th>ANXIETY</th>\n      <th>PEER_PRESSURE</th>\n      <th>CHRONIC DISEASE</th>\n      <th>FATIGUE</th>\n      <th>ALLERGY</th>\n      <th>WHEEZING</th>\n      <th>ALCOHOL CONSUMING</th>\n      <th>COUGHING</th>\n      <th>SHORTNESS OF BREATH</th>\n      <th>SWALLOWING DIFFICULTY</th>\n      <th>CHEST PAIN</th>\n      <th>LUNG_CANCER</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M</td>\n      <td>69</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>YES</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M</td>\n      <td>74</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>YES</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>F</td>\n      <td>59</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>NO</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>63</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>NO</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>F</td>\n      <td>63</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NO</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"##  3. Data Cleaning & Inspection","metadata":{}},{"cell_type":"code","source":"# Basic info\nprint(\"üî¢ Dataset Shape:\", df.shape)\nprint(\"\\nüìã Column Names:\\n\", df.columns.tolist())\nprint(\"\\nüìä Data Types:\\n\", df.dtypes)\nprint(\"\\nüßæ Missing Values:\\n\", df.isnull().sum())\nprint(\"\\nüîç Unique Values in Categorical Columns:\")\nfor col in df.select_dtypes(include='object').columns:\n    print(f\"{col}: {df[col].unique()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:03:58.417396Z","iopub.execute_input":"2025-08-19T11:03:58.417689Z","iopub.status.idle":"2025-08-19T11:03:58.432175Z","shell.execute_reply.started":"2025-08-19T11:03:58.417668Z","shell.execute_reply":"2025-08-19T11:03:58.430945Z"}},"outputs":[{"name":"stdout","text":"üî¢ Dataset Shape: (309, 16)\n\nüìã Column Names:\n ['GENDER', 'AGE', 'SMOKING', 'YELLOW_FINGERS', 'ANXIETY', 'PEER_PRESSURE', 'CHRONIC DISEASE', 'FATIGUE ', 'ALLERGY ', 'WHEEZING', 'ALCOHOL CONSUMING', 'COUGHING', 'SHORTNESS OF BREATH', 'SWALLOWING DIFFICULTY', 'CHEST PAIN', 'LUNG_CANCER']\n\nüìä Data Types:\n GENDER                   object\nAGE                       int64\nSMOKING                   int64\nYELLOW_FINGERS            int64\nANXIETY                   int64\nPEER_PRESSURE             int64\nCHRONIC DISEASE           int64\nFATIGUE                   int64\nALLERGY                   int64\nWHEEZING                  int64\nALCOHOL CONSUMING         int64\nCOUGHING                  int64\nSHORTNESS OF BREATH       int64\nSWALLOWING DIFFICULTY     int64\nCHEST PAIN                int64\nLUNG_CANCER              object\ndtype: object\n\nüßæ Missing Values:\n GENDER                   0\nAGE                      0\nSMOKING                  0\nYELLOW_FINGERS           0\nANXIETY                  0\nPEER_PRESSURE            0\nCHRONIC DISEASE          0\nFATIGUE                  0\nALLERGY                  0\nWHEEZING                 0\nALCOHOL CONSUMING        0\nCOUGHING                 0\nSHORTNESS OF BREATH      0\nSWALLOWING DIFFICULTY    0\nCHEST PAIN               0\nLUNG_CANCER              0\ndtype: int64\n\nüîç Unique Values in Categorical Columns:\nGENDER: ['M' 'F']\nLUNG_CANCER: ['YES' 'NO']\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"# Rename Columns for Clarity\ndf.columns = [\n    'GENDER', 'AGE', 'SMOKING', 'YELLOW_FINGERS', 'ANXIETY',\n    'PEER_PRESSURE', 'CHRONIC_DISEASE', 'FATIGUE', 'ALLERGY',\n    'WHEEZING', 'ALCOHOL', 'COUGHING', 'SHORTNESS_OF_BREATH',\n    'SWALLOWING_DIFFICULTY', 'CHEST_PAIN', 'LUNG_CANCER'\n]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:04:13.535973Z","iopub.execute_input":"2025-08-19T11:04:13.536354Z","iopub.status.idle":"2025-08-19T11:04:13.542186Z","shell.execute_reply.started":"2025-08-19T11:04:13.536331Z","shell.execute_reply":"2025-08-19T11:04:13.541005Z"}},"outputs":[],"execution_count":5},{"cell_type":"markdown","source":"##  4. Encode Target & Features","metadata":{}},{"cell_type":"code","source":"# Label Encode Target: YES/NO ‚Üí 1/0\nle = LabelEncoder()\ndf['LUNG_CANCER'] = le.fit_transform(df['LUNG_CANCER'])  # YES=1, NO=0\n\n# Encode Gender: M/F ‚Üí 1/0\ndf['GENDER'] = le.fit_transform(df['GENDER'])  # M=1, F=0\n\n# All other features are already encoded as 1/2 ‚Üí Convert to 0/1 for consistency\nbinary_cols = df.columns[2:-1]  # Exclude GENDER and LUNG_CANCER\ndf[binary_cols] = df[binary_cols].replace({2: 1, 1: 0})  # Now: YES=1, NO=0\n\n# Final check\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:04:28.343921Z","iopub.execute_input":"2025-08-19T11:04:28.345082Z","iopub.status.idle":"2025-08-19T11:04:28.372855Z","shell.execute_reply.started":"2025-08-19T11:04:28.345047Z","shell.execute_reply":"2025-08-19T11:04:28.371563Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   GENDER  AGE  SMOKING  YELLOW_FINGERS  ANXIETY  PEER_PRESSURE  \\\n0       1   69        0               1        1              0   \n1       1   74        1               0        0              0   \n2       0   59        0               0        0              1   \n3       1   63        1               1        1              0   \n4       0   63        0               1        0              0   \n\n   CHRONIC_DISEASE  FATIGUE  ALLERGY  WHEEZING  ALCOHOL  COUGHING  \\\n0                0        1        0         1        1         1   \n1                1        1        1         0        0         0   \n2                0        1        0         1        0         1   \n3                0        0        0         0        1         0   \n4                0        0        0         1        0         1   \n\n   SHORTNESS_OF_BREATH  SWALLOWING_DIFFICULTY  CHEST_PAIN  LUNG_CANCER  \n0                    1                      1           1            1  \n1                    1                      1           1            1  \n2                    1                      0           1            0  \n3                    0                      1           1            0  \n4                    1                      0           0            0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>GENDER</th>\n      <th>AGE</th>\n      <th>SMOKING</th>\n      <th>YELLOW_FINGERS</th>\n      <th>ANXIETY</th>\n      <th>PEER_PRESSURE</th>\n      <th>CHRONIC_DISEASE</th>\n      <th>FATIGUE</th>\n      <th>ALLERGY</th>\n      <th>WHEEZING</th>\n      <th>ALCOHOL</th>\n      <th>COUGHING</th>\n      <th>SHORTNESS_OF_BREATH</th>\n      <th>SWALLOWING_DIFFICULTY</th>\n      <th>CHEST_PAIN</th>\n      <th>LUNG_CANCER</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>69</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>74</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>59</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>63</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>63</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"## 5. Exploratory Data Analysis (EDA) ","metadata":{}},{"cell_type":"code","source":"# 5.1 Target Distribution\nfig = px.pie(\n    df, names='LUNG_CANCER', title=\"Lung Cancer: Class Distribution\",\n    color='LUNG_CANCER', color_discrete_sequence=['#FF7F0E', '#1F77B4']\n)\nfig.update_traces(textinfo='percent+label')\nfig.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:05:20.536456Z","iopub.execute_input":"2025-08-19T11:05:20.536791Z","iopub.status.idle":"2025-08-19T11:05:20.581424Z","shell.execute_reply.started":"2025-08-19T11:05:20.536766Z","shell.execute_reply":"2025-08-19T11:05:20.580343Z"}},"outputs":[{"output_type":"display_data","data":{"text/html":"<html>\n<head><meta charset=\"utf-8\" /></head>\n<body>\n    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"a58afb3c-35bd-42f8-9315-b23e1b354d2e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a58afb3c-35bd-42f8-9315-b23e1b354d2e\")) {                    Plotly.newPlot(                        \"a58afb3c-35bd-42f8-9315-b23e1b354d2e\",                        [{\"customdatadomain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"LUNG_CANCER=%{customdata[0]}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"labels\":[1,1,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"legendgroup\":\"\",\"marker\":{\"colors\":[\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#1F77B4\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#1F77B4\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#1F77B4\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\",\"#FF7F0E\"]},\"name\":\"\",\"showlegend\":true,\"type\":\"pie\",\"textinfo\":\"percent+label\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Lung Cancer: Class Distribution\"},\"piecolorway\":[\"#FF7F0E\",\"#1F77B4\"]},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('a58afb3c-35bd-42f8-9315-b23e1b354d2e');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                            </script>        </div>\n</body>\n</html>"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# ##  5.2 Age Distribution by Cancer Status\nfig = px.histogram(df, x='AGE', color='LUNG_CANCER', nbins=30,\n                   marginal='box', title=\"Age Distribution by Cancer Status\",\n                   color_discrete_sequence=['#FF6B6B', '#4ECDC4'])\nfig.update_layout(bargap=0.1)\nfig.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:05:51.096178Z","iopub.execute_input":"2025-08-19T11:05:51.096512Z","iopub.status.idle":"2025-08-19T11:05:51.168339Z","shell.execute_reply.started":"2025-08-19T11:05:51.096487Z","shell.execute_reply":"2025-08-19T11:05:51.167278Z"}},"outputs":[{"output_type":"display_data","data":{"text/html":"<html>\n<head><meta charset=\"utf-8\" /></head>\n<body>\n    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"9ca310c8-385c-4029-89e8-bf9afa467718\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9ca310c8-385c-4029-89e8-bf9afa467718\")) {                    Plotly.newPlot(                        \"9ca310c8-385c-4029-89e8-bf9afa467718\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"LUNG_CANCER=1\\u003cbr\\u003eAGE=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"1\",\"marker\":{\"color\":\"#FF6B6B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"1\",\"nbinsx\":30,\"offsetgroup\":\"1\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[69,74,75,52,51,53,61,72,58,48,75,57,68,44,64,60,72,65,61,53,62,67,59,60,56,60,68,63,77,52,70,72,62,64,70,56,63,54,49,57,52,63,73,47,69,70,70,68,74,71,56,66,76,78,68,66,67,60,61,58,76,56,67,73,54,62,81,56,60,66,62,62,55,62,71,52,59,48,60,61,59,64,56,58,81,64,62,72,60,61,60,49,53,58,61,68,60,72,72,57,51,54,56,77,64,57,66,70,53,51,58,58,51,61,61,76,71,69,56,67,54,63,47,62,65,63,64,65,51,56,70,58,67,62,74,75,56,55,62,73,68,75,63,61,62,44,56,54,56,69,72,59,70,64,61,72,63,74,71,72,77,72,55,65,67,69,55,51,64,63,69,64,59,73,55,63,60,74,65,79,62,71,67,55,54,77,58,64,61,67,56,70,70,57,77,63,62,59,70,71,56,57,78,64,62,49,77,64,63,54,38,75,70,59,77,61,64,71,67,64,69,64,59,67,74,77,60,64,70,58,59,39,71,70,60,60,55,55,63,59,56,64,62,77,59,60,58,58,51,61,61,76,71,69,56,67,54,63,47,62,65,63,64,65,51,56,70,58,67,62],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"LUNG_CANCER=1\\u003cbr\\u003eAGE=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"1\",\"marker\":{\"color\":\"#FF6B6B\"},\"name\":\"1\",\"notched\":true,\"offsetgroup\":\"1\",\"showlegend\":false,\"x\":[69,74,75,52,51,53,61,72,58,48,75,57,68,44,64,60,72,65,61,53,62,67,59,60,56,60,68,63,77,52,70,72,62,64,70,56,63,54,49,57,52,63,73,47,69,70,70,68,74,71,56,66,76,78,68,66,67,60,61,58,76,56,67,73,54,62,81,56,60,66,62,62,55,62,71,52,59,48,60,61,59,64,56,58,81,64,62,72,60,61,60,49,53,58,61,68,60,72,72,57,51,54,56,77,64,57,66,70,53,51,58,58,51,61,61,76,71,69,56,67,54,63,47,62,65,63,64,65,51,56,70,58,67,62,74,75,56,55,62,73,68,75,63,61,62,44,56,54,56,69,72,59,70,64,61,72,63,74,71,72,77,72,55,65,67,69,55,51,64,63,69,64,59,73,55,63,60,74,65,79,62,71,67,55,54,77,58,64,61,67,56,70,70,57,77,63,62,59,70,71,56,57,78,64,62,49,77,64,63,54,38,75,70,59,77,61,64,71,67,64,69,64,59,67,74,77,60,64,70,58,59,39,71,70,60,60,55,55,63,59,56,64,62,77,59,60,58,58,51,61,61,76,71,69,56,67,54,63,47,62,65,63,64,65,51,56,70,58,67,62],\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"type\":\"box\"},{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"LUNG_CANCER=0\\u003cbr\\u003eAGE=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":\"#4ECDC4\",\"pattern\":{\"shape\":\"\"}},\"name\":\"0\",\"nbinsx\":30,\"offsetgroup\":\"0\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[59,63,63,68,60,69,61,21,69,55,57,56,59,56,60,60,58,63,69,64,47,57,68,57,71,63,62,61,59,68,67,55,70,64,87,59,55,46,63],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"LUNG_CANCER=0\\u003cbr\\u003eAGE=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":\"#4ECDC4\"},\"name\":\"0\",\"notched\":true,\"offsetgroup\":\"0\",\"showlegend\":false,\"x\":[59,63,63,68,60,69,61,21,69,55,57,56,59,56,60,60,58,63,69,64,47,57,68,57,71,63,62,61,59,68,67,55,70,64,87,59,55,46,63],\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"AGE\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,0.7326],\"title\":{\"text\":\"count\"}},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.0,1.0],\"matches\":\"x\",\"showticklabels\":false,\"showgrid\":true},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.7426,1.0],\"matches\":\"y2\",\"showticklabels\":false,\"showline\":false,\"ticks\":\"\",\"showgrid\":false},\"legend\":{\"title\":{\"text\":\"LUNG_CANCER\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Age Distribution by Cancer Status\"},\"barmode\":\"relative\",\"bargap\":0.1},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('9ca310c8-385c-4029-89e8-bf9afa467718');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                            </script>        </div>\n</body>\n</html>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"#  5.3 Gender vs Lung Cancer\ngender_cancer = df.groupby(['GENDER', 'LUNG_CANCER']).size().reset_index(name='count')\ngender_cancer['GENDER'] = gender_cancer['GENDER'].map({1: 'Male', 0: 'Female'})\ngender_cancer['LUNG_CANCER'] = gender_cancer['LUNG_CANCER'].map({1: 'Yes', 0: 'No'})\n\nfig = px.bar(gender_cancer, x='GENDER', y='count', color='LUNG_CANCER',\n             title=\"Gender vs Lung Cancer\", barmode='group',\n             color_discrete_sequence=['#FF9F1C', '#2EC4B6'])\nfig.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:06:01.456539Z","iopub.execute_input":"2025-08-19T11:06:01.457007Z","iopub.status.idle":"2025-08-19T11:06:01.541840Z","shell.execute_reply.started":"2025-08-19T11:06:01.456957Z","shell.execute_reply":"2025-08-19T11:06:01.540876Z"}},"outputs":[{"output_type":"display_data","data":{"text/html":"<html>\n<head><meta charset=\"utf-8\" /></head>\n<body>\n    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"bff12e76-97e9-471e-a1cc-bd54fac650f7\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"bff12e76-97e9-471e-a1cc-bd54fac650f7\")) {                    Plotly.newPlot(                        \"bff12e76-97e9-471e-a1cc-bd54fac650f7\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"LUNG_CANCER=No\\u003cbr\\u003eGENDER=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"No\",\"marker\":{\"color\":\"#FF9F1C\",\"pattern\":{\"shape\":\"\"}},\"name\":\"No\",\"offsetgroup\":\"No\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Female\",\"Male\"],\"xaxis\":\"x\",\"y\":[22,17],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"LUNG_CANCER=Yes\\u003cbr\\u003eGENDER=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Yes\",\"marker\":{\"color\":\"#2EC4B6\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Yes\",\"offsetgroup\":\"Yes\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Female\",\"Male\"],\"xaxis\":\"x\",\"y\":[125,145],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"GENDER\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"LUNG_CANCER\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Gender vs Lung Cancer\"},\"barmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('bff12e76-97e9-471e-a1cc-bd54fac650f7');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                            </script>        </div>\n</body>\n</html>"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"#  5.4 Symptom Heatmap (Correlation with Cancer)\n# Correlation with target\nsymptoms = df.drop(['GENDER', 'AGE', 'LUNG_CANCER'], axis=1).columns\n# Create a list of all symptom columns and the target column\ncols_to_correlate = list(symptoms) + ['LUNG_CANCER']\ncorr_with_cancer = df[cols_to_correlate].corr()['LUNG_CANCER'].drop('LUNG_CANCER').sort_values()\n\nfig = px.bar(x=corr_with_cancer.values, y=corr_with_cancer.index, orientation='h',\n             title=\"Symptom Correlation with Lung Cancer\",\n             color=corr_with_cancer.values, color_continuous_scale='Bluered')\nfig.update_layout(showlegend=False, xaxis_title=\"Correlation\")\nfig.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:09:58.863396Z","iopub.execute_input":"2025-08-19T11:09:58.864222Z","iopub.status.idle":"2025-08-19T11:09:58.950063Z","shell.execute_reply.started":"2025-08-19T11:09:58.864183Z","shell.execute_reply":"2025-08-19T11:09:58.949185Z"}},"outputs":[{"output_type":"display_data","data":{"text/html":"<html>\n<head><meta charset=\"utf-8\" /></head>\n<body>\n    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"8e34cda9-43f4-4164-b9dc-ff664c665f48\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8e34cda9-43f4-4164-b9dc-ff664c665f48\")) {                    Plotly.newPlot(                        \"8e34cda9-43f4-4164-b9dc-ff664c665f48\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003ecolor=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[0.05817888585203866,0.06073844947572176,0.11089109464241367,0.1449471328873116,0.15067295875611586,0.18133896271065786,0.18638763171540704,0.19045069511005322,0.24857008084596408,0.24929995989905984,0.25972975816128163,0.28853280309173057,0.3277656462844022],\"coloraxis\":\"coloraxis\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"h\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[0.05817888585203866,0.06073844947572176,0.11089109464241367,0.1449471328873116,0.15067295875611586,0.18133896271065786,0.18638763171540704,0.19045069511005322,0.24857008084596408,0.24929995989905984,0.25972975816128163,0.28853280309173057,0.3277656462844022],\"xaxis\":\"x\",\"y\":[\"SMOKING\",\"SHORTNESS_OF_BREATH\",\"CHRONIC_DISEASE\",\"ANXIETY\",\"FATIGUE\",\"YELLOW_FINGERS\",\"PEER_PRESSURE\",\"CHEST_PAIN\",\"COUGHING\",\"WHEEZING\",\"SWALLOWING_DIFFICULTY\",\"ALCOHOL\",\"ALLERGY\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Correlation\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"color\"}},\"colorscale\":[[0.0,\"rgb(0,0,255)\"],[1.0,\"rgb(255,0,0)\"]]},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Symptom Correlation with Lung Cancer\"},\"barmode\":\"relative\",\"showlegend\":false},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('8e34cda9-43f4-4164-b9dc-ff664c665f48');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                            </script>        </div>\n</body>\n</html>"},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"# 5.5 Pairplot of Top 5 Features\ntop_features = corr_with_cancer.abs().sort_values(ascending=False).head(5).index.tolist()\nsns.pairplot(df[[*top_features, 'LUNG_CANCER']], hue='LUNG_CANCER', palette='husky')\nplt.suptitle(\"Pairplot of Top 5 Symptoms\", y=1.02)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-19T11:10:01.031739Z","iopub.execute_input":"2025-08-19T11:10:01.032202Z","iopub.status.idle":"2025-08-19T11:10:04.467306Z","shell.execute_reply.started":"2025-08-19T11:10:01.032174Z","shell.execute_reply":"2025-08-19T11:10:04.466008Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/palettes.py\u001b[0m in \u001b[0;36mcolor_palette\u001b[0;34m(palette, n_colors, desat, as_cmap)\u001b[0m\n\u001b[1;32m    234\u001b[0m                 \u001b[0;31m# Perhaps a named matplotlib colormap?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 235\u001b[0;31m                 \u001b[0mpalette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmpl_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_colors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_cmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mas_cmap\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    236\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# Error class changed in mpl36\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/palettes.py\u001b[0m in \u001b[0;36mmpl_palette\u001b[0;34m(name, n_colors, as_cmap)\u001b[0m\n\u001b[1;32m    405\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0mcmap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_colormap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/_compat.py\u001b[0m in \u001b[0;36mget_colormap\u001b[0;34m(name)\u001b[0m\n\u001b[1;32m    132\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 133\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmpl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolormaps\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    134\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/matplotlib/cm.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, item)\u001b[0m\n\u001b[1;32m     81\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 82\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{item!r} is not a known colormap name\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"'husky' is not a known colormap name\"","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/1606968144.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 5.5 Pairplot of Top 5 Features\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mtop_features\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcorr_with_cancer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mabs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mascending\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtolist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpairplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mtop_features\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'LUNG_CANCER'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'LUNG_CANCER'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'husky'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msuptitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Pairplot of Top 5 Symptoms\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1.02\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/axisgrid.py\u001b[0m in \u001b[0;36mpairplot\u001b[0;34m(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size)\u001b[0m\n\u001b[1;32m   2112\u001b[0m     \u001b[0;31m# Set up the PairGrid\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2113\u001b[0m     \u001b[0mgrid_kws\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"diag_sharey\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdiag_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"hist\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2114\u001b[0;31m     grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,\n\u001b[0m\u001b[1;32m   2115\u001b[0m                     \u001b[0mhue_order\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue_order\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorner\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcorner\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2116\u001b[0m                     height=height, aspect=aspect, dropna=dropna, **grid_kws)\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/axisgrid.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, hue, vars, x_vars, y_vars, hue_order, palette, hue_kws, corner, diag_sharey, height, aspect, layout_pad, despine, dropna)\u001b[0m\n\u001b[1;32m   1331\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_orig_palette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1332\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hue_order\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhue_order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1333\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpalette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue_order\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1334\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_legend_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1335\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/axisgrid.py\u001b[0m in \u001b[0;36m_get_palette\u001b[0;34m(self, data, hue, hue_order, palette)\u001b[0m\n\u001b[1;32m    266\u001b[0m             \u001b[0;31m# Otherwise act as if we just got a list of colors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    267\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 268\u001b[0;31m                 \u001b[0mcolors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolor_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_colors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    269\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    270\u001b[0m             \u001b[0mpalette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolor_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_colors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/seaborn/palettes.py\u001b[0m in \u001b[0;36mcolor_palette\u001b[0;34m(palette, n_colors, desat, as_cmap)\u001b[0m\n\u001b[1;32m    235\u001b[0m                 \u001b[0mpalette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmpl_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_colors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_cmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mas_cmap\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# Error class changed in mpl36\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 237\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{palette!r} is not a valid palette name\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    238\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    239\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mdesat\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: 'husky' is not a valid palette name"],"ename":"ValueError","evalue":"'husky' is not a valid palette name","output_type":"error"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1250x1250 with 25 Axes>","image/png":"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TZ133nlG1gIAAAAAALogj3dyPP/883Xeeefp1ltv1fPPP6/PPvvMyLoAAAAAAEAX4dWdD6WlpSotLdWLL76olpYWDR48WFdeeaUmTJigCRMmON5QAQAAAAAA8D2Pw4crrrhCV1xxhSTp66+/VllZmSOMeO655/TNN99o+PDh+r//+z+jagUAAAAAAAHolF61GRoaqiuvvFKXXnqpJkyYoNdff11//vOftXv3bl/XBwAAAAAAApxX4UNLS4veffddbdmyRaWlpdq2bZuio6N12WWXaenSpbr88suNqhMAAAAAAAQoj8OHK6+8Utu2bdN5552nyy+/XHfccYfWrFmj/v37G1kfAAAAAAAIcB6HD2+//bb69++vK6+8UldccYUuv/xynX322UbWBgAAAAAAugCPX7VZX1+vZ599Vj179tSjjz6qAQMG6MILL1RmZqZefvllHTt2zMg6AQAAAABAgPL4zoezzjpL1157ra699lpJUlNTk9555x1t2bJFjz32mG666SYNGTJEO3fuNKxYAAAAAAAQeDy+8+E/nXXWWerbt6/69u2rPn36qFu3btq1a5cvawMAAAAAAF2Ax3c+tLW16b333lNpaam2bNmi//mf/1Fzc7OioqI0YcIEFRQUaMKECUbWCgAAAAAAApDH4UPv3r3V3NysyMhITZgwQU8++aSuuOIKnX/++UbWBwAAAAAAApzH4cPjjz+uCRMmaOjQoUbWAwAAAAAAuhiPw4c77rjDyDoAAAAAAEAXdcobTgIAAAAAAHiC8AEAAAAAABiK8AEAAAAAABiK8AEAAAAAABiK8AEAAAAAABjqjAgfCgoKFBMTo9DQUCUmJqqiosLt3OXLl2v8+PHq06eP+vTpo+Tk5A7nAwAAAAAA//J7+LBu3TpZrVbl5OSosrJSsbGxSklJ0dGjR13OLy0t1dSpU7VlyxaVl5crOjpa11xzjT777LNOrhwAAAAAAHjC7+FDXl6epk+froyMDI0cOVKFhYXq2bOnioqKXM5/4YUXdPfddysuLk7Dhw/XihUr1NbWppKSkk6uHAAAAAAAeKKbP0/e0tKi7du3KysryzEWFBSk5ORklZeXe/QdJ06c0DfffKO+ffu6/Nxms8lmszmOGxsbT69ooIuhRwD36A+gY/QI4B79ATjz650PdXV1am1tlcVicRq3WCyqqanx6Dtmz56t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q1cv9erVS15eXnrnnXecHiQAAAAAAHBfDh35sGLFCr377rsWbcOHD1eDBg0kSR06dFB8fLzefvtt50UIAAAAAADcmkNHPhw6dEj169c3P+/atasqV65sft6kSRMdPHjQedEBAAAAAAC351Dx4eLFizp27Jj5+ZIlSxQYGGh+furUKXl6cg1LAAAAAADwfxyqFDRp0kQbNmywO33dunUKCwu74aAAAAAAAED54VDxoW/fvpowYYJ++eUXq2k7duzQxIkT1a9fP6cFBwAAAAAA3J9DF5wcMWKEVqxYobZt26pr165q0qSJJGnv3r1au3atIiIiNGLECFfECQAAAAAA3JRDxQdvb2+tXbtW06dP16JFi5SWliZJaty4sSZNmqSRI0fK29vbFXECAAAAAAA35VDxQZJ8fHw0evRojR492hXxAAAAAACAcoZbUwAAAAAAAJdy6MiH+vXry8PDo8g+Hh4e+v33328oKAAAAAAAUH44fMFJew4dOqQPP/xQubm5NxoTAAAAAAAoRxwqPgwfPtyq7eTJk5o0aZI++OADhYeH66233nJacAAAAAAAwP1d9zUfzp8/rzfeeEMNGzZUamqqlixZou+//14dOnRwaDmzZs1SaGiofH19FR4ers2bNxfZ//Tp03r22WdVp04dmUwmhYWFaeXKlde7GQAAAAAAwMUcvttFfn6+Pv74Y7322mvy9fXVu+++q8cff/ya14KwJTk5WfHx8ZozZ47Cw8M1Y8YMRUdHa+/evapVq5ZV/7y8PHXt2lW1atXSF198oaCgIP3555+qVq2aw+sGAAAAAAAlw6Hiw+LFizVu3DidPn1aY8eO1dNPPy0fH5/rXvn06dMVGxurQYMGSZLmzJmjr7/+WklJSTZv5ZmUlKSTJ09qw4YN8vb2liSFhoZe9/oBAAAAAIDrOVR86Nu3rypWrKh+/frpzz//tFkgkC4XFa4lLy9PW7du1ZgxY8xtnp6eioqKUnp6us15li9froiICD377LNatmyZatasqf79+2vUqFHy8vKyOU9ubq7FRTCzs7OvGRtwMyFHAPvID6Bo5AhgH/kBWHKo+HD33Xdf81aaxT394vjx48rPz1dgYKBFe2BgoPbs2WNznj/++EPfffedHnvsMa1cuVIHDhzQM888o4sXLyohIcHmPImJiXrttdeKFRNwMyJHAPvID6Bo5Ahg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VFSUoqOjrZY9e/ZsVatWTX/99VcxXtWb25w5c1S1alVdunTJ3Hb27Fl5e3urc+fOFn0L38/ff//d5v4gWX8m23sfmzZtau5TmEdXP/71r39Jsv89rPDx6aefFrnuwuUU2r59uzw8PHTo0CGL9i+//FL//Oc/FRAQoIoVK6pJkyYaPHiwtm3b5sArivIqIyNDzz33nBo0aCCTyaTg4GD17NnTPD5I0oYNG3TfffcpICBAvr6+at68uaZPn678/Hxzn6K+f9n6nrRt2zbFxMSoTp06MplMCgkJ0f3336//9//+nwzDcHiZpT2O3awoPpRDc+fO1XPPPacffvjB6QnQvXt3HT161OKxcOFCiz4TJ07U0aNHtWvXLj3++OOKjY3VN998Y55uGIb69++v559/Xvfdd5/WrFmj3377TXPnzpWvr69ef/11PfHEE4qOjtaTTz5p8UUyNjZWbdu21bPPPuvU7UL5d715kZeXp+joaE2ePFnDhg3Thg0btHnzZj377LN67733zD/m/vjjD7Vr10779+/XwoULdeDAAc2ZM0cpKSmKiIjQyZMnHY45NzdXUVFRSkpK0uuvv659+/Zp5cqVunTpksLDw7Vx40aHlwnHPPzww9q2bZs+/fRT7du3T8uXL1fnzp114sQJdenSRevXr7f4sZKamqrg4GClpaVZLCc1NVVdunSxaEtKStLLL7+spKQkp8Zc3P3mzjvvVIUKFSxi3b17t86fP69Tp05Z/CBJTU2VyWRSp06d7K7X19dX48aNsyjI2Yqta9euevPNN/Xkk0/qhx9+0M6dO/Xuu+/q+PHjeu+994q9nYXj0aFDh/TNN9+oS5cuGj58uO6//36L98SWwnGq8HH1j6prTb/SihUr1KFDB+Xm5uqzzz7T7t279Z///Ef+/v4aP358sbfHnhdffNEilltvvdUqvnnz5mnTpk368MMPzfMdPHhQL7/8st577z2L4gls69Kli86ePastW7aY29atW6fatWtr06ZNunDhgrk9NTVV9erVU8OGDR1aR7Nmzay+Q/34448WfWJjY636TJkyRZI0c+ZMq2lHjx5VVFSUQkNDrYrrV/L19dXcuXO1f//+ImMcNWqUYmJi1KpVKy1fvlx79+7VggUL1KBBA40ZM8ah7UX5c+jQIbVt21bfffedpk6dqp07d2rVqlXq0qWL+bv5V199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7pgC6fL+4eHhUeR3osLPxN27d9s8AmD37t3m3wNXfi5e7crPxcaNG0u6/MekwiK4yWQqMk+Cg4Otpl99WmxRSnscK8848qGcuHTpkv79739r2rRpFlW+HTt2qG7dug6fX+UswcHBiomJsbhCcr9+/bR3714tW7asVGLCzcMZedG/f399++23Nq92f/HiReXk5OiWW25R165dNXv2bJ0/f96iT0ZGhj777DPFxMQ4/CWxb9+++vbbb62u61BQUKB33nlHt99+e7HO84Vz3X777eZzQRs2bKjg4GAtX75c27dvN/9YCQoKUlBQkKZNm6a8vDzzkQ87d+7Uli1blJaWZrFPpqWlKT09/ZqFruJwdL8pPHXkyiM3JJkPNf/+++8dOr/d09NTiYmJ+uCDD6xOf+jXr5/Wrl3rslv2fffdd9q5c6cefvhhlyz/at26dVONGjXMdyO4WuEFJxs3bixPT09t3brVYvoff/yhrKwsiohlSFH58M0332jz5s2ler2HcePGacOGDVq2bJmqVq16XcuYMGGC9u3bZ3VLwX79+uns2bOaPXu2M0JFOVO9enVFR0dr1qxZNq+HcPr0aXXr1k3Vq1fXtGnTrKYvX75c+/fvNx+JWr16ddWoUcPqczE7O1sHDhwwfy4WLvOtt95ywVbZVprjWHlHabycWLFihU6dOqUhQ4ZY/QXl4Ycf1ty5c833o7+6WiddvkqtJOXn51vdG9dkMpnP3crNzbW6J3yFChWKvMLy8OHDdccdd2jLli1q166d+vbtqyVLlqhv374aM2aMoqOjFRgYqD///FPJycny8vJyePsBW5yRFyNGjNDXX3+te+65R5MmTdKdd96pqlWrasuWLXrrrbc0d+5ctWrVSu+//746duyo6Ohovf7666pfv75+/fVXvfTSSwoKCtIbb7zhcPwjR47UsmXL1LNnT02bNk3h4eHKzMzUm2++qd27d+vbb7+1KGicP3/eKn+rVq3q8O3gcNmJEyfUp08fDR48WC1atDC/71OmTFGvXr3M/bp06aLZs2erUaNGCgwMNLdHRkbqvffeM1+YUrp81EP79u119913W63vH//4h+bOnaupU6dKuvbncVZWltX0W265xeH9pkuXLpo0aZIyMjIsLhIWGRmpqVOn6syZMw7/2OrRo4fCw8P14YcfWrwmI0eONOdTQkKC7rrrLgUEBGjfvn365ptvHPr8LxyP8vPzlZmZqVWrVikxMVH333+/3dMknK1y5cr65JNP1KdPHz3wwAN6/vnn1ahRIx0/flyLFy/W4cOHtWjRIlWtWlVDhw7VCy+8oAoVKqh58+Y6cuSIRo0apQ4dOlj9hfDgwYNW723jxo1tXuQNzlV4y8CLFy+ai4nS5XyIi4uzKCY66tKlS1bfoTw8PCxy5Ny5c1Z9TCaTAgICtHjxYk2ePFnz5s1T1apVrfpdfWcUewIDAxUfH2/+rCkUERGhF154QS+88IL+/PNPPfTQQwoODtbRo0c1d+5ceXh4yNOTv1vezGbNmqVOnTqpffv2mjhxolq0aKFLly5p7dq1+uCDD7R79259+OGH6tu3r4YNG6a4uDj5+fkpJSVFL730kh555BE9+uij5uXFx8frzTffVGBgoDp06KATJ05o0qRJqlmzph566CFJl/frTz75RDExMerRo4eef/55NW7cWGfPntWqVaskySW/HUpiHLspGSgX7r//fuO+++6zOW3Tpk2GJGPHjh2GJJuPI0eOGPPmzbM5rWHDhoZhGMbAgQNtTm/SpIl5XSEhIcY777xjFUN0dLRx7733mp/n5+cbc+bMMcLDw43KlSsbPj4+RoMGDYzY2Fjjt99+s5j34MGDhiRj27ZtN/5C4abijLwwDMO4cOGCkZiYaDRv3tzw9fU1qlevbnTq1MmYP3++cfHiRfMyDx06ZAwcONAIDAw0vL29jeDgYOO5554zjh8/brHuyMhIY/jw4VYxzZs3z/D397doy8nJMcaOHWs0atTI8Pb2NqpXr248/PDDxs6dOy36JSQk2NyGe+655zpeORjG5fd99OjRRps2bQx/f3+jUqVKRpMmTYxx48YZ586dM/cr/Oz817/+ZTH//PnzDUnGU089ZRiGYeTm5hq33HKLMWXKFJvre+utt4xatWoZeXl51/15PGTIEMMwir/fGIZhnD9/3jCZTEaVKlUs9ucLFy4Yvr6+Vu2GYb0P29qnN2zYYEgyQkJCrF7XyZMnGy1btjQqVqxomEwmo2nTpsbIkSONw4cP23xtrnbl9leoUMGoWbOmERUVZSQlJRn5+fkWfa8el+yNUzcy/aeffjIeeugho2bNmobJZDIaNWpkDBs2zNi/f7+5z/nz542EhASjadOmRsWKFY369esbw4YNM44dO2axLHufR+vWrStWfAkJCUbLli3tTkfRCr9zNG3a1KL90KFDVt95DMP++3H1+2DvM9pkMpn7REZG2uwTHR1tGIZhdO7c2e7+IclISEiwu+6r94msrCyjRo0ahiTj4MGDFtOSk5ONzp07G/7+/oa3t7dx6623Gv379zc2btxYvBcR5drff/9tPPvss0ZISIjh4+NjBAUFGQ888ICRmppq7vPDDz8Y0dHRhp+fn+Hj42M0a9bMePvtt41Lly5ZLOvSpUvGu+++azRv3tyoVKmSceuttxoxMTFW+6RhXP6cfeSRR4xatWoZFSpUMG655RYjOjraWLRokVFQUGAYRtG/Ga41bpX0OHaz8jAMrhwDAAAAAABch2OnAAAAAACAS1F8AAAAZcbhw4et7s9+5ePw4cOlHSIAALgOnHYBAADKjEuXLlldXfxKoaGh3EoSAAA3RPEBAAAAAAC4FKddAAAAAAAAl6L4AAAAAAAAXIriAwAAAAAAcCmKDwAAAAAAwKUoPgAAAAAAAJei+AAAAAAAAFyK4gMAAAAAAHApig8AAAAAAMCl/j/J3lQYTSndtAAAAABJRU5ErkJggg==\n"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}